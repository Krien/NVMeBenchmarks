.TH zns.fpbench 8

.SH NAME
zns.fpbench \- benchmark F2FS data placement by generating workloads that pass write hints with \fIfcntl()\fP

.SH SYNOPSIS
.B zns.fpbench
.B \-f [File]
.I file name to write to
[
.B \-h
.I show help menu
]
[
.B \-l
.I set the logging level [1-3] (default 0)
]
[
.B \-s
.I size of the file to write (supports units of B, K, M, G)
]
[
.B \-b 
.I block size to write to the file in (supports units of B, K, M, G)
]
[
.B \-w 
.I set the write hint to pass to the file
]
[
.B \-n 
.I number of jobs to concurrently repeat the workload on different files
]
[
.B \-c 
.I call fsync() after each block written
]
[
.B \-d 
.I use \fIO_DIRECT\fP for file writes
]
[
.B \-e 
.I use an Exclusive Data Streams per workload
]
[
.B \-m
.I map file to a particular stream
]


.SH DESCRIPTION
is used for identifying the F2FS placement decisions based on the provided write hint from the benchmark. It writes the file with the specified size, in units of the specified block size, and sets the write hint with \fIfcntl()\fP. Concurrently repeating the workload is possible to run the same exact workload on different file names, hence allowing lockless concurrent writing. After writing, all files have extents located, the extents mapped to segments, and segment information retrieved, focusing on the heat classification that the segment was assigned.

.de SAMPLE
.br
.nr saveIN \\n(.i
.RS
.nf
.nh
..
.de ESAMPLE
.hy
.fi
.RE
.in \\n[saveIN]u
..

.SH OPTIONS
.BI \-f " filename to be written"
Argument with the file name that will be written. If the file exists it will be deleted and recreated.
.TP
.BI \-h " show help menu"
Display the help menu.
.TP
.BI \-l " set the logging level [1-3] (default 0)"
Increased logging. We recommend at most level 2 for larger files, level 3 prints every detail, including every I/O that is being submitted, hence causing significant output.
.TP
.BI \-s " size of the file to write (supports units of B, K, M, G)"
For convenience the file size can be given in larger units, which are all in power of 2 values.
.TP
.BI \-b " block size to write to the file in (supports units of B, K, M, G)"
Writes are issued based on this size. F2FS has a default block size of 4K, therefore we recommend no values smaller than this.
.TP
.BI \-w " set the write hint to pass to the file (Default 0)"
The write hint to the filw can have several options. Possible options are:
.PP
.SAMPLE
RWH_WRITE_LIFE_NOT_SET = 0
RWH_WRITE_LIFE_NONE    = 1
RWH_WRITE_LIFE_SHORT   = 2
RWH_WRITE_LIFE_MEDIUM  = 3
RWH_WRITE_LIFE_LONG    = 4
RWH_WRITE_LIFE_EXTREME = 5
.ESAMPLE
.TP
.B \-n 
.I number of jobs to concurrently repeat the workload on different files
The number of jobs causes the program to \fIfork()\fP for each numjob, running the same workload on a different file.
.TP
.B \-c 
.I call fsync() after each block written
If enabled, after each block (specified with the given block size), fsync() is called on the file. Without, a single fsync() is called after all block have been written.
.TP
.B \-d 
.I use \fIO_DIRECT\fP for file writes
Use direct I/O for all file writes, opening the file(s) with \fIO_DIRECT\fP
.TP
.B \-e 
.I use an Exclusive Data Streams per workload
Uses an exclusive data stream per workload. Requires F2FS Kernel build with Multi-Stream support and fpbench to be build with multi-streams enabled. To build with multi-streams call \fIconfigure --enable-multi-streams\fP
.TP
.B \-m
.I map a file to a particular stream
This passes a bitmap of the stream to use to an \fIfcntl()\fP call with \fIF_SET_DATA_STREAM_MAP\fP. Note, this requires our Multi-Streamed F2FS kernel build to be present (and have multi-streams enabled in F2FS). Furthermore note, that currently a maximum of 11 streams for a single type are possible, as we require at least a single stream per type and allow maximum of 16 streams. Therefore, requesting to enable a stream above this number will either result in \fIfcntl()\fP returning -EINVAL or F2FS ignores the hint and writes the file to stream 0.

.SH AUTHORS
The code was written by Nick Tehrany <nicktehrany1@gmail.com>.

.SH AVAILABILITY
.B zns.fpbench
is available from https://github.com/nicktehrany/zns-tools.git

.SH SEE ALSO
.BR zns.segmap(8)
.TP
.BR zns.imap(8)
.TP
.BR zns.fiemap(8)
