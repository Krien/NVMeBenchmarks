.TH zns.fiemap 8

.SH NAME
zns.fiemap \- Identifying File System Extent Mapping on ZNS Devices with \fIFIEMAP\fP

.SH SYNOPSIS
.B zns.fiemap
.B \-f [File]
.I path to the file to be mapped
[
.B \-h
.I show help menu
]
[
.B \-l
.I set the logging level [1-2] (default 0)
]
[
.B \-s
.I show holes between extents
]
[
.B \-w 
.I show \fIFIBMAP\fP extent flags
]

.SH DESCRIPTION
is used for identifying the file system usage of ZNS devices by locating extents, contiguous regions of file data, on the ZNS device, and showing the fragmentation of file data over the zones. It locates the physical block address (\fIPBA\fP) ranges and zones in which files are located on \fIZNS\fP devices, listing the specific ranges of \fIPBAs\fP and which zones these are in. 

.SH OPTIONS
.BI \-f " file to be mapped"
Argument with the file path of the to be mapped file.
.TP
.BI \-h " show help menu"
Show the help menu and acronym information.
.TP
.BI \-s " show holes"
Show holes between the different extents.
.TP
.BI \-l " logging level for output"
Set the logging level for output messages. 0 by default. 1 for more verbose logging.
.TP
.BI \-w " show \fIFIBMAP\fP extent flags"
Show the flags of extents returned by \fIioctl()\fP with \fIFIBMAP\fP.

.SH OUTPUT
.B zns.fiemap
outputs which zones contain what extents. For convenience we include zone information in the output, such as the starting and ending addresses, such that it is easier to understand if the file is occupying the entire zone or only parts. The important information is the range of the block addresses, which we depict with a start and ending address of the extent. The output contains several acronyms:
.TP

.BI LBAS
Logical Block Address Start (for the Zone)
.TP
.BI LBAE
Logical Block Address End (for the Zone, equal to LBAS + ZONE CAP)
.TP
.BI CAP
Zone Capacity (in 512B sectors)
.TP
.BI WP
Write Pointer of the Zone
.TP
.BI SIZE
Size of the Zone (in 512B sectors)
.TP
.BI STATE
State of a zone
.TP
.BI MASK
The Zone Mask that is used to calculate LBAS of LBA addresses in a zone
.TP
.BI EXTID
Extent number in the order of the extents returned by ioctl(), depciting logical file data ordering
.TP
.BI PBAS
Physical Block Address Start
.TP
.BI PBAE
Physical Block Address End 
.TP
.BI FLAGS
Flags of the extent as returned by ioctl()
.TP
.BI NOE
Number of Extents
.TP
.BI NOZ
Number of Zones (in which extents are)
.TP
.BI TES
Total Extent Size (in 512B sectors)
.TP
.BI AES
Average Extent Size (floored value due to hex print, in 512B sectors). Meant for easier comparison with Extent Sizes.
.TP
.BI EAES
Exact Average Extent Size (double point precision value, in 512B sectors). Meant for exact calculations of average extent sizes.
.TP
.BI NOH
Number of Holes
.TP
.BI THS
Total Hole Size (in 512B sectors)
.TP
.BI AHS
Average Hole Size (floored value due to hex print, in 512B sectors). Meant for easier comparison with Extent Sizes.
.TP
.BI EAHS
Exact Average Hole Size (double point precision value, in 512B sectors). Meant for exact calculations of average hole sizes.

.SH Limitations
F2FS utilizes all devices (zoned and conventional) as one address space, hence extent mappings return offsets in this range. This requires to subtract the conventional device size from offsets to get the location on the ZNS. Therefore, the utility only works with a single ZNS device currently, and relies on the address space being conventional followed by ZNS (which is how F2FS handles it anyways). 
.TP
Extents that are out of the address range for the ZNS device are not included in the statistics, which occurs when F2FS allocates space for files but has not written them. We show these with info prints if the logging level is set above the default of 0.

.SH AUTHORS
The code was written by Nick Tehrany <nicktehrany1@gmail.com>.

.SH AVAILABILITY
.B zns.fiemap
is available from https://github.com/nicktehrany/zns-tools.git

.SH SEE ALSO
.BR zns.segmap(8)
.TP
.BR zns.imap(8)
.TP
.BR zns.fpbench(8)
